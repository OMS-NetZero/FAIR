name: Continuous integration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# template mostly borrowed from openscm-runner
# https://github.com/openscm/openscm-runner

jobs:
  all:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dev dependencies
      run: |
        # sudo apt-get update
        # sudo apt-get install mpich libmpich-dev libhdf5-mpich-dev libcurl4-openssl-dev bzip2 libsnappy-dev libblosc-dev libzstd-dev
        # echo "Download and build netCDF github master"
        # git clone https://github.com/Unidata/netcdf-c
        # pushd netcdf-c
        # export CPPFLAGS="-I/usr/include/hdf5/mpich -I${NETCDF_DIR}/include"
        # export LDFLAGS="-L${NETCDF_DIR}/lib"
        # export LIBS="-lhdf5_mpich_hl -lhdf5_mpich -lm -lz"
        # autoreconf -i
        # ./configure --prefix $NETCDF_DIR --enable-netcdf-4 --enable-shared --enable-dap --enable-parallel4
        # make -j 2
        # make install
        # popd
        pip install --upgrade pip wheel
        pip install -e .[dev]
    - name: Formatting and linters
      run: |
        bandit -c .bandit.yml -r src/fair
        black --check src setup.py --exclude fair/_version.py
        isort --check-only --quiet --recursive src setup.py
        pydocstyle src
        flake8 src setup.py
#        pylint src

    - name: Test with pytest
      env:
        MIN_COVERAGE: 90
      run: |
          pytest tests -r a --cov=./src/fair --cov-report=xml
          if ! coverage report --fail-under=${MIN_COVERAGE} --show-missing
          then
              echo
              echo "Error: Test coverage has to be at least ${MIN_COVERAGE}"
              exit 1
          fi
      # we could run the notebook tests, but we probably don't want to do this every
      # time and use all our minutes.
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        verbose: true
        file: ./coverage.xml

    - name: Test docs
      uses: readthedocs/actions/preview@v1
      with:
        project-slug: "readthedocs-preview"
